{"version":3,"file":"static/js/184.0854616f.chunk.js","mappings":"wKACA,EAA0B,wBAA1B,EAAiE,6BAAjE,EAAyI,yBAAzI,EAA4K,wB,4BCY5K,EARmB,SAACA,GAChB,OACI,0BACI,UAAC,KAAD,CAAUC,GAAE,YAAOD,EAAME,IAAMC,UAAWC,EAAAA,EAAAA,OAA1C,cAAsDJ,EAAMK,KAA5D,UCEZ,EANgB,SAACL,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMM,W,uCCEtCC,GAAeC,EAAAA,EAAAA,GAAiB,KA8C9BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,wBAAhBD,EAhBL,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOT,KAAK,iBACLU,UAAWC,EAAAA,GACXC,YAAY,wFACZC,SAAU,CAACC,EAAAA,EAAUZ,QAEhC,0BACI,6CAUhB,EA9CgB,SAACP,GACb,IAAIoB,EAAkBpB,EAAMqB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBnB,KAAMmB,EAAEnB,KAAMH,GAAIsB,EAAEtB,IAA1BsB,EAAEtB,OACxEuB,EAAkBzB,EAAMqB,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAG,SAAC,EAAD,CAAoBrB,QAASqB,EAAErB,SAAjBqB,EAAEzB,OAS3E,OACM,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACMgB,KAEN,iBAAKjB,UAAWC,EAAhB,UACKqB,GACD,SAAChB,EAAD,CAAqBG,SAZX,SAACgB,GACnB5B,EAAM6B,YAAYD,EAAOE,0B,oBCajC,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KApBkB,SAACC,GACnB,MAAM,CACFZ,YAAaY,EAAMZ,gBAMF,SAACa,GACtB,MAAM,CACFL,YAAa,SAACC,GACVI,GAASC,EAAAA,EAAAA,GAAqBL,SAUtCM,EAAAA,EAFJ,CAGEC","sources":["webpack://my-app/./src/components/Dialogs/Dialog.module.css?7071","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Massage/Massage.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__5l1aK\",\"dialogsItems\":\"Dialog_dialogsItems__KzsAs\",\"active\":\"Dialog_active__1LtzB\",\"Massages\":\"Dialog_Massages__Oe+dH\",\"message\":\"Dialog_message__UpzR4\"};","import {NavLink} from \"react-router-dom\";\nimport s from \"./DialogItem.module.css\";\n\n\n\nconst DialogItem = (props) => {\n    return (\n        <div >\n            <NavLink  to={`./${props.id}`} className={s.dialog}> {props.name} </NavLink>\n        </div>\n    )\n\n}\nexport default DialogItem","import s from \"../Dialog.module.css\";\n\n\n\nconst Massage = (props) => {\n    return(\n        <div className={s.message}>{props.message}</div>\n    )\n\n}\nexport default Massage","import React from 'react';\nimport s from './Dialog.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Massage from \"./Massage/Massage\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../utils/validator/validator\";\n\nlet maxlength100 = maxLengthCreator(100)\n\n\n\nconst Dialogs = (props) => {\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />)\n    let messagesElement = props.dialogsPage.messages.map(m=> <Massage key={m.id} message={m.message}/>)\n\n\n\n    const addNewMessage = (values) => {\n        props.sendMessage(values.newMessageText)\n    }\n\n\n  return(\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={s.Massages}>\n                {messagesElement}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n\n            </div>\n        </div>\n  )\n}\n\n\nconst AddMessageForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newMessageText\"\n                       component={Textarea}\n                       placeholder=\"введи сообщение\"\n                       validate={[required, maxlength100]}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\n  \n\n\nexport default Dialogs","import React from 'react';\nimport {messageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport { withAuthRedirect} from \"../../hoc/withAurhRedirect\";\nimport {compose} from \"redux\";\n\n\n\n\n\n\n\nlet mapStateToProps = (state)=>{\n    return{\n        dialogsPage: state.dialogsPage,\n    }\n}\n\n\n\nlet mapDispatchToProps = (dispatch)=>{\n    return{\n        sendMessage: (newMessageText) =>{\n            dispatch(messageActionCreator(newMessageText))\n        },\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n\n"],"names":["props","to","id","className","s","name","message","maxlength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogs","map","d","messagesElement","messages","m","values","sendMessage","newMessageText","compose","connect","state","dispatch","messageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}